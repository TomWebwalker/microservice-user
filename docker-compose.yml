version: '3.3'

services:
  microservice-user:
    container_name: microservice-user
    environment:
      MS_USER_DB_NAME: '${MS_USER_DB_NAME}'
      MS_USER_DB_USER: '${MS_USER_DB_USER}'
      MS_USER_DB_PASS: '${MS_USER_DB_PASS}'
      MS_USER_DB_PORT: '${MS_USER_DB_PORT}'
      MS_USER_DB_HOST: '${MS_USER_DB_HOST}'
    build:
      context: .
      dockerfile: Dockerfile
    ports:
      - ${MS_USER_NODE_PORT}:${MS_USER_NODE_PORT}
    expose:
      - ${MS_USER_NODE_PORT}
    networks:
      - app-network
    depends_on:
      - db

  nginx-reverse-proxy:
    image: nginx:mainline-alpine
    container_name: nginx-reverse-proxy
    restart: unless-stopped
    ports:
      - '80:80'
    volumes:
      - ./nginx-conf:/etc/nginx/conf.d
    depends_on:
      - microservice-user
    networks:
      - app-network

  db:
    image: mysql:5.7
    restart: always
    environment: 
      MYSQL_DATABASE: '${MS_USER_DB_NAME}'
      MYSQL_USER: '${MS_USER_DB_USER}'
      MYSQL_PASSWORD: '${MS_USER_DB_PASS}'
      MYSQL_ROOT_PASSWORD: '${MS_USER_DB_PASS}'   
    ports: 
      - '${MS_USER_DB_PORT}:${MS_USER_DB_PORT}'
    expose: 
      - '${MS_USER_DB_PORT}'
    volumes: 
      - my-db:/var/lib/mysql     
    networks:
      - app-network   


  phpmyadmin:
    depends_on:
      - db
    image: phpmyadmin/phpmyadmin
    restart: always
    ports:
      - 8088:80
    environment:
      PMA_HOST: db
      MYSQL_ROOT_PASSWORD: ${MS_USER_DB_PASS}

networks:
  app-network:
    driver: bridge

volumes:
    my-db:
